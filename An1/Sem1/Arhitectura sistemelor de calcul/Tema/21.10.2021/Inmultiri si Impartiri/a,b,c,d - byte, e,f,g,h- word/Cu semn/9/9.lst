     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      
    15                                      ; a,b,c,d-byte, e,f,g,h-word
    16                                      ; (2*d+e)/a
    17                                      
    18 00000000 01                          a db 1
    19 00000001 02                          b db 2 
    20 00000002 00                          c db 0
    21 00000003 01                          d db 1
    22                                      
    23 00000004 0100                        e dw 1
    24 00000006 0000                        f dw 0
    25 00000008 0100                        g dw 1
    26 0000000A 0000                        h dw 0
    27                                      
    28                                      
    29                                  ; our code starts here
    30                                  segment code use32 class=code
    31                                      start:
    32                                          ; ...
    33 00000000 A0[03000000]                    MOV AL , [d]
    34 00000005 B402                            MOV AH , 2
    35 00000007 F6EC                            IMUL AH
    36                                          ; AX = AL *     AH
    37                                          ; AX = 2*d
    38                                          
    39 00000009 668B1D[04000000]                MOV BX , [e]
    40                                          ; BX = e
    41                                          
    42 00000010 6601D8                          ADD AX , BX
    43                                          ; AX = AX + BX
    44                                          ; AX = 2*d+e
    45                                          
    46 00000013 8A1D[00000000]                  MOV BL , [a]
    47                                          
    48 00000019 F6FB                            IDIV BL
    49                                          ; AL = AX / BX
    50                                          ; AL = (2*d+e)/a
    51                                          
    52                                          
    53                                          
    54                                          
    55                                          
    56                                          ; exit(0)
    57 0000001B 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    58 0000001D FF15[00000000]                  call    [exit]       ; call exit to terminate the program
