     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; ...
    14                                      
    15                                      ; a,b,c,d-byte, e,f,g,h-word
    16                                      ; 2*(a+b)-e
    17                                      
    18 00000000 01                          a db 1
    19 00000001 02                          b db 2 
    20 00000002 00                          c db 0
    21 00000003 01                          d db 1
    22                                      
    23 00000004 0100                        e dw 1
    24 00000006 0000                        f dw 0
    25 00000008 0100                        g dw 1
    26 0000000A 0000                        h dw 0
    27                                      
    28                                      
    29                                  ; our code starts here
    30                                  segment code use32 class=code
    31                                      start:
    32                                          ; ...
    33                                          
    34 00000000 A0[00000000]                    MOV AL , [a]
    35 00000005 0205[01000000]                  ADD AL , [b]
    36 0000000B B402                            MOV AH , 2
    37 0000000D F6EC                            IMUL AH
    38                                          ; AX = 2*(a+b)
    39                                          
    40 0000000F 6689C3                          MOV BX , AX
    41                                          ; BX = 2*(a+b)
    42 00000012 A0[04000000]                    MOV AL , [e]
    43                                          ; AL = e
    44 00000017 6698                            CBW
    45                                          ; AX = e
    46 00000019 6629C3                          SUB BX , AX
    47                                          
    48                                          ; exit(0)
    49 0000001C 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    50 0000001E FF15[00000000]                  call    [exit]       ; call exit to terminate the program
