     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit , printf , scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 6D6573616A3A200A            afisare db 'mesaj: ', 10
    18 00000008 257300                      citire db '%s' , 0
    19 0000000B 00<rept>                    sir times 101 db 0
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 66B8FFFF                        mov ax , -1
    25 00000004 B701                            mov bh , 1
    26 00000006 F6FF                            idiv bh
    27                                          
    28                                          ; exit(0)
    29 00000008 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    30 0000000A FF15[00000000]                  call    [exit]       ; call exit to terminate the program
