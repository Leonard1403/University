     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit , printf , scanf               ; tell nasm that exit exists even if we won't be defining it
     8                                  
     9                                  import scanf msvcrt.dll
    10                                  import printf msvcrt.dll
    11                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
    12                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    13                                  
    14                                  ; our data is declared here (the variables needed by our program)
    15                                  segment data use32 class=data
    16                                      ; ...
    17 00000000 53000000                    da dd 83
    18 00000004 256400                      citire db '%d' , 0
    19 00000007 02000000                    div2 dd 2
    20 0000000B 76616C6F6172653A20-         mesaj_afisare db 'valoare: ', 0
    20 00000014 00                 
    21 00000015 76616C6F6172653A20-         afisare_variabile db 'valoare: %d' , 10
    21 0000001E 25640A             
    22                                      
    23                                  ; our code starts here
    24                                  segment code use32 class=code
    25                                      start:
    26                                          ; ...
    27                                          
    28 00000000 FF35[00000000]                  push dword [da]
    29 00000006 68[15000000]                    push afisare_variabile
    30 0000000B FF15[00000000]                  call [printf]
    31 00000011 83C408                          add esp, 4*2
    32                                          
    33                                          ;shr eax , 1
    34 00000014 66A1[00000000]                  mov ax , [da]
    35 0000001A 6683E07E                        and ax , 1111110b
    36                                          
    37 0000001E 66A3[00000000]                  mov [da] , ax
    38 00000024 FF35[00000000]                  push dword [da]
    39 0000002A 68[15000000]                    push afisare_variabile
    40 0000002F FF15[00000000]                  call [printf]
    41 00000035 83C408                          add esp, 4*2
    42                                          
    43 00000038 66A1[00000000]                  mov ax , [da]
    44 0000003E F635[07000000]                  div byte[div2]
    45 00000044 6698                            CBW
    46 00000046 66A3[00000000]                  mov [da] , ax
    47                                          
    48 0000004C FF35[00000000]                  push dword [da]
    49 00000052 68[15000000]                    push afisare_variabile
    50 00000057 FF15[00000000]                  call [printf]
    51 0000005D 83C408                          add esp, 4*2
    52                                          
    53 00000060 66A1[00000000]                  mov ax , [da]
    54 00000066 6683E03E                        and ax , 111110b
    55                                          
    56 0000006A 66A3[00000000]                  mov [da] , ax
    57 00000070 FF35[00000000]                  push dword [da]
    58 00000076 68[15000000]                    push afisare_variabile
    59 0000007B FF15[00000000]                  call [printf]
    60 00000081 83C408                          add esp, 4*2
    61                                          
    62 00000084 66A1[00000000]                  mov ax , [da]
    63 0000008A F635[07000000]                  div byte[div2]
    64 00000090 6698                            CBW
    65 00000092 66A3[00000000]                  mov [da] , ax
    66                                          
    67 00000098 FF35[00000000]                  push dword [da]
    68 0000009E 68[15000000]                    push afisare_variabile
    69 000000A3 FF15[00000000]                  call [printf]
    70 000000A9 83C408                          add esp, 4*2
    71                                          
    72 000000AC 66A1[00000000]                  mov ax , [da]
    73 000000B2 6683E01E                        and ax , 11110b
    74                                          
    75 000000B6 66A3[00000000]                  mov [da] , ax
    76 000000BC FF35[00000000]                  push dword [da]
    77 000000C2 68[15000000]                    push afisare_variabile
    78 000000C7 FF15[00000000]                  call [printf]
    79 000000CD 83C408                          add esp, 4*2
    80                                          
    81 000000D0 66A1[00000000]                  mov ax , [da]
    82 000000D6 F635[07000000]                  div byte[div2]
    83 000000DC 6698                            CBW
    84 000000DE 66A3[00000000]                  mov [da] , ax
    85                                          
    86 000000E4 FF35[00000000]                  push dword [da]
    87 000000EA 68[15000000]                    push afisare_variabile
    88 000000EF FF15[00000000]                  call [printf]
    89 000000F5 83C408                          add esp, 4*2
    90                                          
    91 000000F8 66A1[00000000]                  mov ax , [da]
    92 000000FE 6683E00E                        and ax , 1110b
    93                                          
    94 00000102 66A3[00000000]                  mov [da] , ax
    95 00000108 FF35[00000000]                  push dword [da]
    96 0000010E 68[15000000]                    push afisare_variabile
    97 00000113 FF15[00000000]                  call [printf]
    98 00000119 83C408                          add esp, 4*2
    99                                          
   100 0000011C 66A1[00000000]                  mov ax , [da]
   101 00000122 F635[07000000]                  div byte[div2]
   102 00000128 6698                            CBW
   103 0000012A 66A3[00000000]                  mov [da] , ax
   104                                          
   105 00000130 FF35[00000000]                  push dword [da]
   106 00000136 68[15000000]                    push afisare_variabile
   107 0000013B FF15[00000000]                  call [printf]
   108 00000141 83C408                          add esp, 4*2
   109                                          
   110 00000144 66A1[00000000]                  mov ax , [da]
   111 0000014A 6683E006                        and ax , 110b
   112                                          
   113 0000014E 66A3[00000000]                  mov [da] , ax
   114 00000154 FF35[00000000]                  push dword [da]
   115 0000015A 68[15000000]                    push afisare_variabile
   116 0000015F FF15[00000000]                  call [printf]
   117 00000165 83C408                          add esp, 4*2
   118                                          
   119                                          
   120                                          
   121 00000168 66A1[00000000]                  mov ax , [da]
   122 0000016E F635[07000000]                  div byte[div2]
   123 00000174 6698                            CBW
   124 00000176 66A3[00000000]                  mov [da] , ax
   125                                          
   126 0000017C FF35[00000000]                  push dword [da]
   127 00000182 68[15000000]                    push afisare_variabile
   128 00000187 FF15[00000000]                  call [printf]
   129 0000018D 83C408                          add esp, 4*2
   130                                          
   131 00000190 66A1[00000000]                  mov ax , [da]
   132 00000196 6683E002                        and ax , 10b
   133                                          
   134 0000019A 66A3[00000000]                  mov [da] , ax
   135 000001A0 FF35[00000000]                  push dword [da]
   136 000001A6 68[15000000]                    push afisare_variabile
   137 000001AB FF15[00000000]                  call [printf]
   138 000001B1 83C408                          add esp, 4*2
   139                                          
   140                                          
   141                                          ;mov edx , 0
   142                                          ;mul word[div2]
   143                                          
   144                                          
   145                                          
   146                                          ; exit(0)
   147 000001B4 6A00                            push    dword 0      ; push the parameter for exit onto the stack
   148 000001B6 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
