     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-rusntime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                  
    14 00000000 05                          a db 5
    15 00000001 02                          b db 2
    16 00000002 09                          c db 9
    17 00000003 0C                          d db 12
    18                                      ; ...
    19                                  
    20                                  ; our code starts here
    21                                  segment code use32 class=code
    22                                      start:
    23                                          ; ...
    24 00000000 A0[00000000]                    MOV AL, [a]
    25 00000005 1205[03000000]                  ADC AL , byte[d]
    26                                          ;AL = (a+d)
    27                                          
    28 0000000B 8A1D[01000000]                  MOV BL, [b]
    29 00000011 121D[03000000]                  ADC BL, byte[d]
    30                                          ;BL = (b+d)
    31                                          
    32 00000017 8A0D[02000000]                  MOV CL , [c]
    33 0000001D 18C1                            SBB CL , AL
    34                                          ; CL = c - (a+d)
    35                                          
    36 0000001F 10D9                            ADC CL , BL
    37                                          ; CL = c - (a+d) + (b+d)
    38                                          
    39                                          ; exit(0)
    40 00000021 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    41 00000023 FF15[00000000]                  call    [exit]       ; call exit to terminate the program
